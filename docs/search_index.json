[["intro.html", "Snow Balance Bookdown Intro", " Snow Balance Bookdown Kate McGill 2024-12-11 Intro This Bookdown contains code from WR474 Snow Hydrology coursework at Colorado State University, synthesized in one place. "],["assignment-2-data-vizualization.html", "Chapter 1 Assignment 2: Data Vizualization", " Chapter 1 Assignment 2: Data Vizualization ##Data Cleaning ##load data into R library(tidyverse) library(dataRetrieval) asos &lt;- read.csv(&quot;Data/asos_berthoud.csv&quot;) asos_clean &lt;- asos %&gt;% mutate(valid = mdy_hm(valid), Date = as_date(valid), Time = format(valid, &quot;%H:%M&quot;), Hour = format(valid, &quot;%Y/%m/%d %H&quot;), tmpc = (tmpf - 32) * (5/9), dwpc = (dwpf - 32) * (5/9), sms = sknt *.514444, p01mm = p01i * 25.4, altmb = alti * 33.8637526 * .8279, gustms = gust * .514444) %&gt;% select(!skyc2:snowdepth) asos_hourly &lt;- asos_clean %&gt;% group_by(Hour) %&gt;% mutate(p01mm = sum(p01mm), tmpc = mean(tmpc), dwpc = mean(dwpc), sms = mean(sms), p01mm = sum(p01mm), altmb = mean(altmb), gustms = max(gustms)) %&gt;% filter(grepl(&quot;:55&quot;, valid)) write.csv(file = &quot;Data/asosclean.csv&quot;, asos_hourly) SNOTEL &lt;- read.csv(&quot;Data/SNOTEL_Berthoud.csv&quot;) q_USGS &lt;- readNWISuv(siteNumbers = &quot;09022000&quot;, startDate = &quot;2023-09-01&quot;, endDate = &quot;2024-08-31&quot;, parameterCd = &quot;00060&quot;, tz = &quot;America/Denver&quot;) %&gt;% distinct()%&gt;% mutate(DT_mst = with_tz(dateTime, tzone = &quot;MST&quot;), source = &quot;USGS&quot;) %&gt;% select(dateTime, q_cfs = X_00060_00000) ## GET: https://nwis.waterservices.usgs.gov/nwis/iv/?site=09022000&amp;format=waterml,1.1&amp;ParameterCd=00060&amp;startDT=2023-09-01&amp;endDT=2024-08-31 ##Data Exploration p_month &lt;- asos_hourly %&gt;% select(Date, p01mm) %&gt;% mutate(month = format(as.Date(Date, format=&quot;%m/%d/%y&quot;), &quot;%m&quot;)) %&gt;% group_by(month) %&gt;% summarize(total_p_mm = sum(p01mm, na.rm = TRUE)) ## Adding missing grouping variables: `Hour` ggplot(p_month, mapping = aes(x = month, y = total_p_mm))+ geom_point(color = &quot;steelblue4&quot;, size = 5)+ xlab(&quot;Total Precip in mm&quot;)+ ylab(&quot;Month&quot;)+ ggtitle(&quot;Monthly Precipitation Totals of Berthoud Pass SnowYear 2024&quot;)+ labs(caption = &quot;Precipitation plotted on a time scale agregated to the average monthly value for the snow year 2024. Accessed from Iowa mesonet ASOS database.&quot;) ##temperature: monthly maximum, average, minimum in degrees C t_month &lt;- asos_hourly %&gt;% mutate(month = format(as.Date(Date, format=&quot;%m/%d/%y&quot;), &quot;%m&quot;)) %&gt;% select(Date, tmpc, month) %&gt;% group_by(month) %&gt;% summarize(t_max = max(tmpc, na.rm = TRUE), t_min = min(tmpc, na.rm = TRUE), t_avg = mean(tmpc, na.rm = TRUE)) ## Adding missing grouping variables: `Hour` ggplot(t_month, mapping = aes(x = month))+ geom_point(aes(y = t_max, color = &quot;Max&quot;))+ geom_point(aes(y = t_min, color = &quot;Min&quot;))+ geom_point(aes(y = t_avg, color = &quot;Average&quot;))+ theme_classic()+ labs( x = &quot;Month&quot;, y = &quot;Temperature&quot;, title = &quot;Temperature Trends by Month for Berthoud Pass Snow Year 2024&quot;, colour = &quot;Legend&quot;, caption = &quot;Temperature trends plotted on a time scale agregated to monthly values for the snow year 2024. Accessed from Iowa mesonet ASOS database.&quot;) ##relative humidity monthly average in percent rel_hum &lt;- asos_hourly %&gt;% mutate(month = format(as.Date(Date, format=&quot;%m/%d/%y&quot;), &quot;%m&quot;)) %&gt;% select(Date, relh, month) %&gt;% group_by(month) %&gt;% summarize(avg_relh = mean(relh, na.rm = TRUE)) ## Adding missing grouping variables: `Hour` ggplot(rel_hum, mapping = aes(x = month, y = avg_relh))+ geom_point(color = &quot;steelblue4&quot;, size = 5)+ xlab(&quot;Relative Humidity %&quot;)+ ylab(&quot;Month&quot;)+ ggtitle(&quot;Average Relative Humidity for Berthoud Pass Snow Year 2024&quot;)+ theme_classic()+ labs(caption = &quot;Average relative humidity plotted on a time scale agregated to the average monthly value for the snow year 2024. Accessed from Iowa mesonet ASOS database.&quot;) ##wind speed monthly average and maximum in m/s wind_speed &lt;- asos_hourly %&gt;% mutate(month = format(as.Date(Date, format = &quot;%m/%d/%y&quot;), &quot;%m&quot;)) %&gt;% select(Date, sms, month) %&gt;% group_by(month) %&gt;% summarize(avg_ws = mean(sms, na.rm = TRUE), max_ws = max(sms, na.rm = TRUE)) ## Adding missing grouping variables: `Hour` ggplot(wind_speed, mapping = aes(x = month))+ geom_point(aes(y = avg_ws, color = &quot;Average&quot;))+ geom_point(aes(y = max_ws, color = &quot;Maximum&quot;))+ theme_classic()+ labs( x = &quot;Month&quot;, y = &quot;Wind Speed m/s&quot;, title = &quot;Wind Speed Trends at Berthoud Pass for Snow Year 2024&quot;, color = &quot;Legend&quot;, caption = &quot;Wind speed plotted on a time scale agregated to the average monthly value for the snow year 2024. Accessed from Iowa mesonet ASOS database.&quot;) ##wind rose direction ##annual % in each of 16 [N, NNE, NE, ENE, etc.] (or 36) sectors including the % occurrence of no wind and variable (VRB) wind (not in the wind rose) library(openair) windRose(asos_hourly, ws = &quot;sms&quot;, wd = &quot;drct&quot;, ws.int = 2, angle = 30, type = &quot;default&quot;, bias.corr = TRUE, cols = &quot;jet&quot;, width = 1.5, seg = NULL, auto.text = TRUE, breaks = 6, offset = 10, normalise = FALSE, max.freq = NULL, paddle = FALSE, key.header = NULL, key.footer = &quot;(m/s)&quot;, key.position = &quot;bottom&quot;, key = list(height = 1), dig.lab = 5, statistic = &quot;prop.count&quot;, pollutant = NULL, annotate = TRUE, angel.scale = 315, border = NA) ##SWE (from NRCS SNOTEL) daily in mm ggplot(data = SNOTEL, mapping = aes(x = Date, y = Snow.Water.Equivalent..m., na.rm = TRUE)) + geom_point()+ theme_classic()+ labs( x = &quot;Date&quot;, y = &quot;SWE (mm)&quot;, title = &quot;Daily SWE&quot;, caption = &quot;Daily SWE in Berthoud Pass. Data retrieved from Berthoud Pass SNOTEL station for water year 2024&quot; ) ##streamflow from USGS daily in m3/s ggplot(q_USGS, mapping = aes(x = dateTime, y = q_cfs))+ geom_point()+ theme_classic ()+ labs( x = &quot;Date&quot;, y = &quot;Discharge (m^3/s)&quot;, title = &quot;Daily Discharge&quot;, caption = &quot;Daily Discharge of USGS Fraser streamflow gauge located at upper STA near Winter Park for the water year 2024.&quot; ) "],["assignment-4-cloud-cover-data-and-precipitation.html", "Chapter 2 Assignment 4: Cloud Cover Data and Precipitation", " Chapter 2 Assignment 4: Cloud Cover Data and Precipitation library(tidyverse) library(stringr) library(lubridate) library(paletteer) CloudCover &lt;- read.csv(&quot;Data/asosclean.csv&quot;) LowerCC &lt;- CloudCover %&gt;% mutate(Date = date(Date), month = month(Date, label = TRUE)) %&gt;% filter(skyc1 %in% c(&quot;BKN&quot;, &quot;CLR&quot;, &quot;OVC&quot;, &quot;SCT&quot;)) %&gt;% mutate(skyc1 = factor(skyc1, levels = c(&quot;OVC&quot;, &quot;BKN&quot;, &quot;SCT&quot;, &quot;CLR&quot;))) Cloud Cover Probability: From the cloud cover, determine the monthly frequency of different cloud cover types (clear, few, scattered, broken, and overcast). It is acceptable to consider only the lowest cloud deck; and ggplot()+ geom_bar(LowerCC, mapping = aes(x = month, fill = skyc1), na.rm = TRUE)+ scale_fill_paletteer_d(&quot;fishualize::Chlorurus_microrhinos&quot;)+ labs( title = &quot;Average Cloud Cover by Month&quot;, caption = str_wrap(&quot;Figure 1. Stacked bar plot of cloud cover made with data retrieved from Berthoud ASOS station at local Berthoud airport in CO, USA.&quot;, width = 60), x = &quot;Month&quot;, y = &quot;Count&quot;, color = &quot;Legend&quot; )+ theme( plot.caption = element_text(hjust = 0.5, size = 10), # Center-align caption, adjust size plot.caption.position = &quot;plot&quot; ) the average monthly fraction of cloud cover (the mean of the hourly cloud cover per month). Plot ii) as a line on a stacked bar chart for the monthly frequency. FracCC &lt;- LowerCC %&gt;% mutate(skyc1_frac = (case_when(skyc1 == &quot;CLR&quot; ~ .05, skyc1 == &quot;SCT&quot; ~ .25, skyc1 == &quot;BKN&quot; ~ .5, skyc1 == &quot;OVC&quot; ~ 1))) %&gt;% group_by(month) %&gt;% summarize(avg_skyc1 = mean(skyc1_frac)) %&gt;% distinct() ggplot()+ geom_bar(LowerCC, mapping = aes(x = month, fill = skyc1), position = &quot;fill&quot;, na.rm = TRUE) + geom_line(FracCC, mapping = aes(x = month, y = avg_skyc1), group = 1) + scale_fill_paletteer_d(&quot;fishualize::Chlorurus_microrhinos&quot;)+ labs( title = &quot;Frequency of Cloud Cover Types&quot;, caption = str_wrap(&quot;Figure 2. Average fraction of cloud cover by month. Made with data retrieved from Berthoud ASOS station at local Berthoud airport in CO, USA.&quot;, width = 60), x = &quot;Month&quot;, y = &quot;Count&quot;, color = &quot;Legend&quot; )+ theme( plot.caption = element_text(hjust = 0.5, size = 10), # Center-align caption, adjust size plot.caption.position = &quot;plot&quot; ) Precipitation Probability: From the precipitation data, determine the monthly frequency of precipitation (how often does precipitation occur). Plot this frequency (fraction or percent) to compare the occurrence without and with including trace precipitation events. Precip &lt;- LowerCC %&gt;% select(Date, Time, month, p01mm) PrecipCount &lt;- Precip %&gt;% filter(p01mm &gt; 0) %&gt;% group_by(month) %&gt;% summarize(precip_occur = n()) %&gt;% mutate(frequency = (precip_occur/sum(precip_occur))) ggplot(PrecipCount, aes(x = month, y = frequency, fill = month)) + geom_col()+ labs( x = &quot;Month&quot;, y = &quot;Frequency&quot;, title = &quot;Precipitation Frequency by Month&quot;, caption = str_wrap(&quot;Figure 3. Instances of precipitation for Water Year 2024 at Berthoud Pass ASOS station. No Trace precipitation included.&quot;, width = 60) ) What is the most common storm type to bring winter precipitation to your watershed and why? Consider the four different synoptic types of precipitation (convective, frontal, cyclonic, orographic). Orographic is the most common storm type to bring winter precipitation to my watershed because the Rocky Mountains create an orographic lifting effect. This lifting effect leads to cloud creation on the way up the Western slope, which then dumps precip on sites such as this one. "],["assignment-5-undercatch.html", "Chapter 3 Assignment 5 Undercatch", " Chapter 3 Assignment 5 Undercatch The objectives of this assignment are as follows: b. determine snowfall (and mixed precipitation) undercatch and correct precipitation for undercatch, and c. determine how much precipitation falls as snow using various assumptions. Trace Precipitation Events: Determine the cumulative hourly precipitation (in mm) excluding trace events and considering trace events. State the quantity of precipitation assumed to occur for each trace event. Plot the two (without and with trace events) cumulative curves versus time. Not all stations record trace events. If this is the case, state that there are no trace events. There are no trace events recorded at this SNOTEL station. Precipitation Undercatch Correction: Using the hourly precipitation including trace events, determine the cumulative hourly precipitation (in mm) before and after correcting for wind undercatch. Use 0oC as the threshold for snow to fall, and allow mixed precipitation for air temperatures from 0 to 3oC. State an assumption for the catch efficiency for rain. Plot the two cumulative curves versus time. asos_hourly &lt;- read.csv(&quot;Data/asosclean.csv&quot;) asos_undercatch &lt;- asos_hourly %&gt;% mutate(Date = date(Date)) %&gt;% ungroup() %&gt;% filter(Date &gt;= &quot;2023-10-13&quot;) %&gt;% mutate(precip_type = case_when(tmpc &lt; 0 ~ &quot;snow&quot;, tmpc &gt;= 0 &amp; tmpc &lt;= 3 ~ &quot;mixed&quot;, tmpc &gt; 3 ~ &quot;rain&quot;), undercatch = case_when(precip_type == &quot;snow&quot; ~ exp(-0.04*sms^1.75), precip_type == &quot;mixed&quot; ~ (1.0104 - (0.0562 * sms)), precip_type == &quot;rain&quot; ~ (1 * sms)), adj_precip = ifelse(p01mm == 0, 0, p01mm + (p01mm * undercatch)), #mm undercatch_loss = adj_precip - p01mm, #mm cum_undercatch_loss = cumsum(replace_na(undercatch_loss, 0))) #mm ##Visualization ggplot(asos_undercatch)+ geom_line(aes(x = Date, y = cum_undercatch_loss))+ labs( x = &quot;Date&quot;, y = &quot;Precipitation (mm)&quot;, title = &quot;Adjusted Daily Cumulative Precipitation&quot;, caption = str_wrap(&quot;Figure 2. Daily cumulative precipitation values adjusted for undercatch estimates. Data from the Berthoud Pass ASOS station for 2024 snow year.&quot;, width = 60) )+ scale_x_date(date_breaks = &quot;1 months&quot;, date_labels = &quot;%b&quot;)+ theme( plot.caption = element_text(hjust = 0.5, size = 10), plot.caption.position = &quot;plot&quot;)+ theme_classic() "],["assignment-6-snow-accumulation.html", "Chapter 4 Assignment 6 Snow Accumulation 4.1 Methods 4.2 Results", " Chapter 4 Assignment 6 Snow Accumulation 4.1 Methods Import the data from Iowa Mesonet and NRCS Snotel Data access sites. Clean the ASOS data: change the date class to POSIXct, aggregate to the hourly time step, create a month column. Clean the SNOTEL data: rename variables, select for date, swe, snow depth, precip accumulation, incrament precip, and average air temp in celsius, and converted precip to mm. Calculate density using the Hedstrom-Pomeroy equation and average air temperature in degrees Celsius. Filtered density dataset to include only values during periods of snow, so when temperature is less than zero and precip is greater than one. Group density by both hourly and monthly parameters. Convert density from a percentage to a decimal value and divided precip by density to determine hourly snowfall. Used cumsum to create a cumulative sum of hourly snowfall for 2024 and plotted next to SNOTEL snow depth. Calculated albedo with the following given parameters: “Estimate and plot the albedo on an hourly basis. State the assumption for the albedo for soil when there is no snow accumulated. Use a fresh snow albedo of 0.84, and the first order exponential function to model albedo. After a snowfall without melting allow albedo to decay to 0.70 and to 0.50 during melt, i.e., T &gt; 0oC.” Key Assumption: I assume that when air temperature has been 0 or below for three days and when precipitation is occurring that snow is accumulating. October 13th at 1:00am in the morning is when there is complete snow cover at Berthoud Summit station. 4.2 Results Fresh snow: Estimate the hourly density of the fresh snow added to the snowpack (i.e., when it is snowing) using the Hedstrom-Pomeroy or another relevant equation. Plot either the average monthly fresh snow density or the hourly fresh snow density; and estimate and plot the net (cumulative) hourly snow depth without metamorphism, also known as snowfall. Snow Depth: From the daily SNOTEL snow depth data, compute the cumulative “snowfall,” i.e., the sum of all positive snow depth amounts. On the same graph, compare the computed snowfall to the amount of snow measured on the ground (observed snow depth). Albedo: Estimate and plot the albedo on an hourly basis. State the assumption for the albedo for soil when there is no snow accumulated. Use a fresh snow albedo of 0.84, and the first order exponential function to model albedo. After a snowfall without melting allow albedo to decay to 0.70 and to 0.50 during melt, i.e., T &gt; 0oC. "],["assignment-8-snow-metamorphism.html", "Chapter 5 Assignment 8 Snow Metamorphism", " Chapter 5 Assignment 8 Snow Metamorphism The metamorphism equation was calculated in excel, not R. Data is loaded in the Data folder, and the visualization is below. library(tidyverse) library(lubridate) library(plotly) test &lt;- read.csv(&quot;Data/asosclean_metamorphism.csv&quot;) test_clean &lt;- test %&gt;% mutate(Date = as.Date(Date, format = &#39;%m/%d/%Y&#39;), cum_depth = cumsum(replace_na(as.numeric(fresh_depth), 0)), fresh_depth = as.numeric(fresh_depth), fresh_density= as.numeric(fresh_density), old_density = as.numeric(old_density), old_depth = as.numeric(old_depth), depth.f.o = as.numeric(depth.f.o), density.f.o = as.numeric(density.f.o)) depth &lt;- ggplot(test_clean, aes(x = Date)) + geom_line(aes(y = depth.f.o, color = &quot;Depth with Metamorphism&quot;))+ geom_line(aes(y = cum_depth, color = &quot;Cumulative Sum Depth&quot;))+ scale_color_manual(values = c(&quot;Depth with Metamorphism&quot; = &quot;slateblue&quot;, &quot;Cumulative Sum Depth&quot; = &quot;forestgreen&quot;))+ scale_x_date(date_breaks = &quot;1 months&quot;, date_labels = &quot;%b&quot;)+ labs( x = &#39;Date&#39;, y = &#39;Snow Depth (m)&#39;, title = &#39;Snow Depth vs. Time&#39;, caption = str_wrap(&quot;Figure 1. Hourly bulk snowpack depth with metamorphism and hourly calculated snow depth for Berthoud Pass ASOS station. Data for water year of 2024.&quot;, width = 60), color = &quot;Legend&quot; )+ theme_classic() depth density &lt;- ggplot(test_clean) + geom_line(aes(x = Date, y = density.f.o), color = &quot;slateblue&quot;)+ scale_x_date(date_breaks = &quot;1 months&quot;, date_labels = &quot;%b&quot;)+ labs( x = &#39;Date&#39;, y = &#39;Density (kg/m^3)&#39;, title = &#39;Bulk Snowpack Density&#39;, caption = str_wrap(&#39;Figure 2. Bulk Snowpack Density calculated with first order exponential equation. Data from Berthoud Pass ASOS Station.&#39;, width = 60) )+ theme_classic() density "],["assignment-10-sublimation.html", "Chapter 6 Assignment 10 Sublimation", " Chapter 6 Assignment 10 Sublimation #Kate McGill #Module 10 Sublimation #12/3/2024 library(tidyverse) library(patchwork) ASOS &lt;- read.csv(&quot;Data/asosclean_metamorphism.csv&quot;) #generalized expression for sublimation sublimation &lt;- ASOS %&gt;% mutate(Date = as.Date(Date, format = &quot;%m/%d/%Y&quot;), pr_mb = 33.8637526*.8279, density_air = (.34722*pr_mb)/(tmpc + 273.15), saturated_vp = 6.112*exp(17.62*tmpc/(243.12+tmpc)), partial_vp = (saturated_vp * relh/100), sublimation_rate = ifelse(depth.f.o &gt; 0, -1*(density_air/pr_mb)*sms*(partial_vp - saturated_vp), 0), cum_sublimation_loss = cumsum(replace_na(sublimation_rate, 0)), cum_undercatch_loss = cum_undercatch_loss/10, wind_threshold = 9.43 + 0.18 * tmpc + 0.0033 * (tmpc)^2, snow_status = ifelse(tmpc &lt;= 0 &amp; p01mm &gt; 0, &quot;snow&quot;, &quot;no_snow&quot;), movement = ifelse(snow_status == &quot;snow&quot; &amp; gustms &gt;= wind_threshold, &quot;movement&quot;, &quot;no_movement&quot;), total_transport = ifelse(snow_status == &quot;snow&quot;, ifelse(movement == &quot;movement&quot;, 0.0000022 * (gustms)^4.04, 0), 0), cum_total_transport = cumsum(replace_na(total_transport, 0)), sublim_blowsnow = sublimation_rate + total_transport, cum_subblow = cumsum(replace_na(sublim_blowsnow, 0)) ) %&gt;% pivot_longer(cols = c(&quot;cum_undercatch_loss&quot;, &quot;cum_sublimation_loss&quot;, &quot;cum_total_transport&quot;, &quot;cum_subblow&quot;), names_to = &quot;cum&quot;, values_to = &quot;cumsum&quot;) wider &lt;- sublimation %&gt;% pivot_wider(names_from = &quot;cum&quot;, values_from = &quot;cumsum&quot;) %&gt;% mutate(month = month(Date)) values &lt;- c(&quot;cum_undercatch_loss&quot; = &quot;slateblue&quot;,&quot;cum_sublimation_loss&quot; = &quot;forestgreen&quot;, &quot;cum_total_transport&quot; = &quot;darkgrey&quot;, &quot;cum_subblow&quot; = &quot;skyblue&quot;) labels &lt;- c(&quot;Sublimation + Blowing Snow&quot;, &quot;Sublimation&quot;, &quot;Blowing Snow&quot;, &quot;Undercatch&quot;) ggplot(sublimation)+ geom_line(aes(x = Date, y = cumsum, group = cum, color = cum))+ scale_color_manual(values = values, labels = labels) + scale_x_date(date_breaks = &quot;1 months&quot;, date_labels = &quot;%b&quot;)+ labs( x = &#39;Date&#39;, y = &#39;Cumulative Snow (mm)&#39;, title = &#39;Snow Loss Berthoud Snowpass&#39;, caption = str_wrap(&#39;Figure 1. Snow loss from Berthoud Pass for snow year 2024. Data from Berthoud Pass ASOS station.&#39;, width = 60), colour = &quot;Legend&quot; )+ theme_classic()+ theme( legend.text = element_text(size = 8) ) ## Warning: Removed 1005 rows containing missing values or values outside the scale range ## (`geom_line()`). ggplot(wider)+ geom_line(aes(x = cum_subblow, y = cum_undercatch_loss, color = month))+ geom_abline(slope = 1, intercept = 0, linetype = &quot;dashed&quot;, color = &quot;red&quot;)+ scale_color_viridis_b()+ labs( x = &#39;Cumulative Sublimation + Blow Snow Loss (mm)&#39;, y = &#39;Cumulative Undercatch Loss (mm)&#39;, title = &#39;Double Mass Curve of Snow Loss&#39;, caption = str_wrap(&#39;Figure 2. Comparison between cumulative undercatch and sublimation + blowing snow loss in Berthoud Pass. Red line represents a 1 to 1 relationship. Data from Berthoud Pass ASOS station. Line color changes with month.&#39;, width = 60) )+ theme_classic()+ theme( legend.position = &quot;none&quot; ) ## Warning: Removed 1005 rows containing missing values or values outside the scale range ## (`geom_line()`). "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
